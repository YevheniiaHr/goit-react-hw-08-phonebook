{"version":3,"file":"static/js/248.ffca9b70.chunk.js","mappings":"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","sources":["components/App.styled.js","components/Form/Form.styled.js","components/Form/Form.js","components/ListItem/ListItem.styled.js","components/ListItem/ListItem.js","components/ContactList/ContactList.styled.js","components/Loader.js","components/ContactList/ContactList.js","pages/ContactsPage.js","redux/contacts/selectors.js"],"sourcesContent":["import styled from 'styled-components';\nexport const Container = styled.div`\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Section = styled.section`\n  display: flex;\n  flex-direction: column;\n  align-content: center;\n  flex-wrap: wrap;\n`;\nexport const Title = styled.h1`\n  font-size: 30px;\n`;\n\nexport const SectionTitle = styled.h2`\n  margin-bottom: 15px;\n  margin-top: 25px;\n`;\nexport const Message = styled.p`\n  color: red;\n`;\n","import styled from 'styled-components';\nimport {\n  Form as FormikForm,\n  Field as FormikField,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const FormGroup = styled.label`\n  display: flex;\n  gap: 10px;\n`;\nexport const Field = styled(FormikField)`\n  padding: 4px;\n`;\nexport const ErrorMessage = styled(FormikError)`\n  font-size: 16px;\n  color: red;\n`;\nexport const Form = styled(FormikForm)`\n  display: flex;\n  gap: 10px;\n`;\n","import { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport { Form, Field, FormGroup, ErrorMessage } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from '../../redux/contacts/selectors';\n\nimport { addContact } from '../../redux/contacts/operations';\nimport Notiflix from 'notiflix';\n\nconst FormSchema = Yup.object().shape({\n  name: Yup.string().required('Name is required'),\n  number: Yup.string().required('Number is required'),\n});\n\nconst ContactForm = () => {\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleSubmit = (values, { resetForm }) => {\n    const { name, number } = values;\n\n    if (\n      contacts.find(\n        contact =>\n          contact.name.toLowerCase().trim() === name.toLowerCase().trim()\n      )\n    ) {\n      resetForm();\n      Notiflix.Notify.failure(`${name} is already in contacts!`);\n      return;\n    }\n\n    dispatch(addContact({ name, number }));\n    resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={FormSchema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormGroup>\n          Name\n          <Field name=\"name\" type=\"text\" placeholder=\"Enter a name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Number\n          <Field name=\"number\" type=\"tel\" placeholder=\"Enter a phone-number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormGroup>\n\n        <button type=\"submit\">Add contact</button>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default ContactForm;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  display: flex;\n  justify-content: space-around;\n`;\nexport const Button = styled.button`\n  width: 90px;\n  padding: 5px;\n  &:hover,\n  &:focus {\n    color: white;\n    background-color: darkgrey;\n    box-shadow: 5px 5px 5px 0px #000000, inset 4px 4px 15px 0px #000000,\n      5px 5px 15px 5px rgba(0, 0, 0, 0);\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport { ListItem, Button } from './ListItem.styled';\nimport { deleteContact } from '../../redux/contacts/operations';\n\nconst ContactItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const removeContact = () => {\n    dispatch(deleteContact(id));\n  };\n  return (\n    <ListItem>\n      <p>\n        {name}: {number}\n      </p>\n      <Button type=\"button\" onClick={removeContact}>\n        Delete\n      </Button>\n    </ListItem>\n  );\n};\nexport default ContactItem;\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n","import { ColorRing } from 'react-loader-spinner';\nexport const Loader = () => {\n  return (\n    <ColorRing\n      visible={true}\n      height=\"80\"\n      width=\"80\"\n      ariaLabel=\"blocks-loading\"\n      wrapperStyle={{ marginLeft: 150 }}\n      wrapperClass=\"blocks-wrapper\"\n      colors={['#e15b64', '#f47e60', '#f8b26a', '#abbd81', '#849b87']}\n    />\n  );\n};\n","import ContactItem from 'components/ListItem/ListItem';\nimport { List } from './ContactList.styled';\nimport {\n  selectContacts,\n  selectError,\n  selectIsLoading,\n  selectVisibleContacts,\n} from '../../redux/contacts/selectors';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useEffect } from 'react';\nimport { fetchContacts } from '../../redux/contacts/operations';\nimport { Loader } from 'components/Loader';\nimport { Message } from 'components/App.styled';\n\nexport const ContactList = () => {\n  const visibleContacts = useSelector(selectVisibleContacts);\n  const contacts = useSelector(selectContacts);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <>\n      {isLoading && contacts?.length === 0 && <Loader />}\n      {error && !isLoading && <div>Something went wrong ...</div>}\n      {!visibleContacts?.length &&\n        !error &&\n        !isLoading(\n          <Message>\n            There are no contacts in your phonebook. Please add your first\n            contact!\n          </Message>\n        )}\n      <List>\n        {visibleContacts.map(({ id, name, number }) => {\n          return <ContactItem key={id} id={id} name={name} number={number} />;\n        })}\n      </List>\n    </>\n  );\n};\n","import { Filter } from '@mui/icons-material';\nimport { Section, SectionTitle } from 'components/App.styled';\nimport { ContactList } from 'components/ContactList/ContactList';\nimport ContactForm from 'components/Form/Form';\n\nconst Contacts = () => {\n  return (\n    <>\n      <Section>\n        <SectionTitle>Add contact</SectionTitle>\n        <ContactForm />\n      </Section>\n      <Section>\n        <SectionTitle>Contacts</SectionTitle>\n\n        <Filter />\n\n        <ContactList />\n      </Section>\n    </>\n  );\n};\nexport default Contacts;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.contacts;\n\nexport const selectFilteredContacts = state => state.filters;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilteredContacts],\n\n  (contacts, filters) => {\n    const filterLowCase = filters.toLowerCase().trim();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterLowCase)\n    );\n  }\n);\n"],"names":["Section","styled","_templateObject","_taggedTemplateLiteral","_templateObject2","Title","_templateObject3","SectionTitle","_templateObject4","Message","_templateObject5","FormGroup","Field","FormikField","ErrorMessage","FormikError","Form","FormikForm","FormSchema","Yup","shape","name","required","number","contacts","useSelector","selectContacts","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","_ref","resetForm","find","contact","toLowerCase","trim","Notiflix","concat","addContact","children","_jsxs","type","placeholder","component","ListItem","Button","id","onClick","deleteContact","List","Loader","ColorRing","visible","height","width","ariaLabel","wrapperStyle","marginLeft","wrapperClass","colors","ContactList","visibleContacts","selectVisibleContacts","isLoading","selectIsLoading","error","selectError","useEffect","fetchContacts","_Fragment","length","map","ContactItem","ContactForm","Filter","state","createSelector","filters","filterLowCase","filter","includes"],"sourceRoot":""}